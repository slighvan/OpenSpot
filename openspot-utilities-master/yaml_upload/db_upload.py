import pymongo 
import yaml

#setup mongoDB connection
my_client = pymongo.MongoClient("mongodb+srv://root:root@cluster0.56jzb.mongodb.net/myFirstDatabase?retryWrites=true&w=majority")
db_name = my_client["Backend"]
collection_name = db_name["bbox_ref"]
spots_db = db_name["spots"]
count = collection_name.count_documents({})

#find the yaml file that was generated when bounding boxes were designed
file_name = input ("Enter yaml file name for the new module setup: ")

#parking lot name that the installation team is working at
parking_lot_name = input ("Enter the parkingLotName you are working at: ")

#query for the parking lot name in order to find the latest modID value
parking_lot_query = {"parkingLotName":parking_lot_name}
#determine if that parking lot exists or not
my_parking_lot = collection_name.find(parking_lot_query)

#this is bad code but it is what it is
flag = 0
for x in my_parking_lot:
    #have the latest modID of the specific parking lot
    flag = 1
    modID = x["modID"]

if flag > 0:
    pass
else:
    #plus one at the end, start at 0
    modID = -1

#open yml file generated by bounding box creation by installation team
ref_yaml_file = open("./yaml_files/" + file_name)
parsed_ref = yaml.load(ref_yaml_file, Loader=yaml.FullLoader)

refSpots = []
#upload the coordinates used by the computer vision
for spotnum, bbox in enumerate(parsed_ref):
    coord = bbox["coordinates"]
    newSpot = ([coord[0][1], coord[0][0]], [coord[2][1], coord[2][0]])
    refSpots.append(newSpot)
    spots_db.insert_one({"modID" : modID+1, "spotNum" : spotnum, "occupied" : False, "parkingLotName":parking_lot_name})

dict_insert = {"parkingLotName" : parking_lot_name,
               "modID" : modID + 1,
               "mapping" : refSpots}


# Insert into the bbox_ref collection
x = collection_name.insert_one(dict_insert)
